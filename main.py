from classes.graph import Graph
from classes.node import Node
from classes.hill_climber import hill_climber
import random


# simple graph
# input = {"A":["B", "E"],
# "B":["A","C","E"],
# "C":["B","D"],
# "D":["C","E"],
# "E":["A","B","D","F"],
# "F":["E"],
# }

# ukraine
input = {'A': ['F', 'B'],
'B': ['A', 'F', 'E', 'D', 'C'],
'C': ['B', 'D'],
'D': ['C', 'B', 'E', 'H'],
'E': ['D', 'B', 'F', 'G', 'H'],
'F': ['A', 'B', 'E', 'G', 'J'],
'G': ['E', 'F', 'J', 'I', 'H'],
'H': ['D', 'E', 'G', 'I'],
'I': ['H', 'G', 'J', 'K', 'N', 'O', 'L'],
'J': ['F', 'G', 'I', 'K'],
'K': ['J', 'I', 'N', 'R', 'M'],
'L': ['I', 'O', 'P'],
'M': ['Q', 'K'],
'N': ['K', 'R', 'O', 'I'],
'O': ['I', 'N', 'R', 'U', 'P', 'L'],
'P': ['L', 'O', 'U', 'S'],
'Q': ['M', 'R'],
'R': ['K', 'Q', 'W', 'U', 'O', 'N'],
'S': ['P', 'U', 'V', 'T'],
'T': ['S'],
'U': ['R', 'W', 'X', 'V', 'S', 'P', 'O'],
'V': ['S', 'U', 'X'],
'W': ['R', 'U', 'X', 'Y'],
'X': ['V', 'U', 'W', 'Y'],
'Y': ['W', 'X']}

# china
# input = {
# '1':['2','4','6'],
# '2':['1','4','5','3'],
# '3':['2','5','7','8'],
# '4':['1','6','5','2'],
# '5':['4','6','10','11','9','7','3','2'],
# '6':['1','4','5','10','12'],
# '7':['5','9','16','8','3'],
# '8':['3','7','16','17'],
# '9':['5','11','15','16','7'],
# '10':['6','12','11','5'],
# '11':['10','12','13','14','15','9','5'],
# '12':['6','10','11','13','25','28','29','30'],
# '13':['12','25','14','11'],
# '14':['13','25','24','19','15','11'],
# '15':['11','14','19','18','16','9'],
# '16':['9','8','7','15','18','17'],
# '17':['8','16','18','20'],
# '18':['15','19','21','20','17','16'],
# '19':['14','19','23','18','15','21'],
# '20':['17','18','21'],
# '21':['20','18','19','23','22'],
# '22':['21','23'],
# '23':['19','21','22','24'],
# '24':['25','14','23'],
# '25':['24','14','13','12','26','27','28'],
# '26':['25','27'],
# '27':['25','26'],
# '28':['25','12','29'],
# '29':['28','30','12'],
# '30':['29','12']
# }

in_graph = Graph(input)
in_graph.create_graph()

# gc = graph_checker(in_graph)
counter = 0
while not in_graph.found():
    for key, node in in_graph.nodes.items():
        color = random.randint(1, 7)
        node.set_color(color)

    in_graph.check_graph()
    counter += 1

print(in_graph.check_graph())
print(counter)


for node in in_graph.nodes:
    print('name: ' + str(in_graph.nodes[node].name) + ' color: ' + str(in_graph.nodes[node].color))
